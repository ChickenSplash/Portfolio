@use "sass:color";
@use "sass:map";
@use "config" as variable;

// Center content vertically and horizontially 

%flex-center {
    display: flex;
    justify-content: center;
    align-items: center;    
}

// in charge of the glowing shadow effects you see throughout

%background-shape {
    border-radius: 5px;
    padding: 25px;
}

%background-effect {
    background-color: rgba(variable.$color-dark, 0.7);
    box-shadow: 0px 0px 80px 0px rgba(variable.$color-light, 0.25);
        
    &:hover {
        background-color: rgba(variable.$color-dark, .85);
        box-shadow: 0px 0px 80px 0px rgba(variable.$color-light, 0.5);
    }
}

%content-background {
    @extend %background-shape;
    @extend %background-effect;
}

// same thing but for text

%text-background-base {
    text-shadow: 0px 0px 16px rgba(variable.$color-light, 0.25);
    transition: text-shadow 0.5s ease;
        
    &:hover {
        text-shadow: 0px 0px 16px rgba(variable.$color-light, 0.5);
    }
}

// Underlining animation upon hovering the text
// dont forget to add the {position: relative;} with this placeholder

%text-underline {
    &:hover {
        color: variable.$color-link;
    }  
    &::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%) scaleX(0);
        transform-origin: center;
        width: 100%;
        height: 1px;
        background-color: variable.$color-link;
        transition: transform 0.2s ease;
    }
       
    &:hover::after {
        transform: translateX(-50%) scaleX(1);
    }
}

%icon-right-margin {
    margin-right: 10px;
}

// Input text boxes

%input-text-box {
    display: block;
    width: 100%;
    border-radius: 5px;
    padding: 10px 15px;
    background-color: variable.$color-dark;
    border: 1px solid color.adjust(variable.$color-light, $lightness: -60%);
    color: variable.$color-light;
    transition: box-shadow 0.5s ease;

    &:focus {
        outline: none;
        box-shadow: 0 0 8px rgba(variable.$color-light, 1);
    }

    &::placeholder {
        color: color.adjust(variable.$color-light, $alpha: -0.6);
    }
}